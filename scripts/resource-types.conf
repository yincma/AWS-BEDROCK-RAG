# 资源类型配置文件
# 格式: RESOURCE_TYPE|AWS_TYPE|TERRAFORM_TYPE|DETECTION_COMMAND|IMPORT_PATTERN
#
# RESOURCE_TYPE: 内部资源类型标识符
# AWS_TYPE: AWS CLI中使用的资源类型
# TERRAFORM_TYPE: Terraform中的资源类型
# DETECTION_COMMAND: 检测资源的AWS CLI命令模板
# IMPORT_PATTERN: Terraform导入地址模式
#
# 可用变量:
# ${PROJECT_NAME} - 项目名称
# ${ENVIRONMENT} - 环境名称
# ${RESOURCE_NAME} - 资源名称

# XRay采样规则
xray_sampling_rule|xray|aws_xray_sampling_rule|aws xray get-sampling-rules --query 'SamplingRuleRecords[?contains(SamplingRule.ruleName,`${PROJECT_NAME}`)].SamplingRule.ruleName' --output json|module.monitoring.aws_xray_sampling_rule.main[0]

# S3存储桶
s3_bucket|s3|aws_s3_bucket|aws s3api list-buckets --query "Buckets[?contains(Name,'${PROJECT_NAME}-${ENVIRONMENT}')].Name" --output json|module.storage.aws_s3_bucket.${BUCKET_TYPE}

# Lambda函数
lambda_function|lambda|aws_lambda_function|aws lambda list-functions --query "Functions[?contains(FunctionName,'${PROJECT_NAME}-${ENVIRONMENT}')].FunctionName" --output json|module.${MODULE_NAME}.aws_lambda_function.main

# CloudWatch日志组
cloudwatch_log_group|logs|aws_cloudwatch_log_group|aws logs describe-log-groups --log-group-name-prefix "/aws/lambda/${PROJECT_NAME}-${ENVIRONMENT}" --query 'logGroups[].logGroupName' --output json|aws_cloudwatch_log_group.${LOG_GROUP_NAME}

# API Gateway REST API
api_gateway_rest_api|apigateway|aws_api_gateway_rest_api|aws apigateway get-rest-apis --query "items[?contains(name,'${PROJECT_NAME}-${ENVIRONMENT}')].{name:name,id:id}" --output json|module.api_gateway.aws_api_gateway_rest_api.main

# DynamoDB表
dynamodb_table|dynamodb|aws_dynamodb_table|aws dynamodb list-tables --query "TableNames[?contains(@,'${PROJECT_NAME}-${ENVIRONMENT}')]" --output json|module.dynamodb.aws_dynamodb_table.${TABLE_NAME}

# IAM角色
iam_role|iam|aws_iam_role|aws iam list-roles --query "Roles[?contains(RoleName,'${PROJECT_NAME}-${ENVIRONMENT}')].RoleName" --output json|module.${MODULE_NAME}.aws_iam_role.${ROLE_TYPE}

# CloudFormation栈（如果有）
cloudformation_stack|cloudformation|aws_cloudformation_stack|aws cloudformation list-stacks --query "StackSummaries[?contains(StackName,'${PROJECT_NAME}-${ENVIRONMENT}') && StackStatus!='DELETE_COMPLETE'].StackName" --output json|aws_cloudformation_stack.${STACK_NAME}

# OpenSearch Serverless集合
opensearch_collection|opensearchserverless|aws_opensearchserverless_collection|aws opensearchserverless list-collections --query "collectionSummaries[?contains(name,'${PROJECT_NAME}-${ENVIRONMENT}')].{name:name,id:id}" --output json|module.bedrock.aws_opensearchserverless_collection.knowledge_base[0]

# OpenSearch Serverless安全策略
opensearch_security_policy|opensearchserverless|aws_opensearchserverless_security_policy|aws opensearchserverless list-security-policies --type data --query "securityPolicySummaries[?contains(name,'${PROJECT_NAME}-${ENVIRONMENT}')].{name:name,type:type}" --output json|module.bedrock.aws_opensearchserverless_security_policy.${POLICY_TYPE}[0]

# Bedrock知识库
bedrock_knowledge_base|bedrock|aws_bedrock_knowledge_base|aws bedrock list-knowledge-bases --query "knowledgeBaseSummaries[?contains(name,'${PROJECT_NAME}-${ENVIRONMENT}')].{name:name,knowledgeBaseId:knowledgeBaseId}" --output json|module.bedrock.aws_bedrock_knowledge_base.main

# EventBridge规则
eventbridge_rule|events|aws_cloudwatch_event_rule|aws events list-rules --query "Rules[?contains(Name,'${PROJECT_NAME}-${ENVIRONMENT}')].Name" --output json|module.monitoring.aws_cloudwatch_event_rule.${RULE_NAME}

# SNS主题
sns_topic|sns|aws_sns_topic|aws sns list-topics --query "Topics[?contains(TopicArn,'${PROJECT_NAME}-${ENVIRONMENT}')]" --output json|module.notifications.aws_sns_topic.${TOPIC_NAME}

# SQS队列
sqs_queue|sqs|aws_sqs_queue|aws sqs list-queues --queue-name-prefix "${PROJECT_NAME}-${ENVIRONMENT}" --query 'QueueUrls' --output json|module.queues.aws_sqs_queue.${QUEUE_NAME}

# Secrets Manager密钥
secrets_manager_secret|secretsmanager|aws_secretsmanager_secret|aws secretsmanager list-secrets --query "SecretList[?contains(Name,'${PROJECT_NAME}-${ENVIRONMENT}')].Name" --output json|module.secrets.aws_secretsmanager_secret.${SECRET_NAME}

# KMS密钥
kms_key|kms|aws_kms_key|aws kms list-aliases --query "Aliases[?contains(AliasName,'alias/${PROJECT_NAME}-${ENVIRONMENT}')].{AliasName:AliasName,TargetKeyId:TargetKeyId}" --output json|module.kms.aws_kms_key.${KEY_NAME}

# CloudFront分发
cloudfront_distribution|cloudfront|aws_cloudfront_distribution|aws cloudfront list-distributions --query "DistributionList.Items[?contains(Comment,'${PROJECT_NAME}-${ENVIRONMENT}')].{Id:Id,Comment:Comment}" --output json|module.cdn.aws_cloudfront_distribution.main

# ECR仓库
ecr_repository|ecr|aws_ecr_repository|aws ecr describe-repositories --query "repositories[?contains(repositoryName,'${PROJECT_NAME}-${ENVIRONMENT}')].repositoryName" --output json|module.ecr.aws_ecr_repository.${REPO_NAME}

# Step Functions状态机
sfn_state_machine|stepfunctions|aws_sfn_state_machine|aws stepfunctions list-state-machines --query "stateMachines[?contains(name,'${PROJECT_NAME}-${ENVIRONMENT}')].{name:name,stateMachineArn:stateMachineArn}" --output json|module.workflows.aws_sfn_state_machine.${WORKFLOW_NAME}